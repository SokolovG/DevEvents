"""Initial migration

Revision ID: 40ccc74ca631
Revises:
Create Date: 2025-02-18 12:14:22.210835

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "40ccc74ca631"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("slug", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=1000), nullable=False),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("[[[[id]]]]", name=op.f("pk_categories")),
    )
    op.create_index(op.f("ix_categories_slug"), "categories", ["slug"], unique=True)
    op.create_table(
        "event_organizers",
        sa.Column("organizer_id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.[[[[id]]]]"],
            name=op.f("fk_event_organizers_event_id_events"),
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["organizer_id"],
            ["organizers.[[[[id]]]]"],
            name=op.f("fk_event_organizers_organizer_id_organizers"),
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint(
            "organizer_id", "event_id", "[[[[id]]]]", name=op.f("pk_event_organizers")
        ),
    )
    op.create_table(
        "event_registrations",
        sa.Column("profile_id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "REGISTERED",
                "CONFIRMED",
                "WAITLISTED",
                "CANCELLED",
                "ATTENDED",
                "NO_SHOW",
                name="participantstatus",
            ),
            nullable=False,
        ),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["events.[[[[id]]]]"],
            name=op.f("fk_event_registrations_event_id_events"),
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profiles.[[[[id]]]]"],
            name=op.f("fk_event_registrations_profile_id_profiles"),
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint(
            "profile_id", "event_id", "[[[[id]]]]", name=op.f("pk_event_registrations")
        ),
    )
    op.create_table(
        "events",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=1000), nullable=False),
        sa.Column("organizer_id", sa.Integer(), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column(
            "format",
            sa.Enum("ONLINE", "OFFLINE", "HYBRID", name="eventformat"),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum("PLANNED", "ONGOING", "COMPLETED", "CANCELLED", name="eventstatus"),
            nullable=False,
        ),
        sa.Column(
            "currency", sa.Enum("USD", "EUR", "RUB", name="currency"), nullable=False
        ),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("is_online", sa.Boolean(), nullable=False),
        sa.Column("is_verify", sa.Boolean(), nullable=False),
        sa.Column("pub_date", sa.DateTime(), nullable=False),
        sa.Column("event_start_date", sa.DateTime(), nullable=False),
        sa.Column("event_end_date", sa.DateTime(), nullable=False),
        sa.Column("registration_deadline", sa.DateTime(), nullable=True),
        sa.Column("meeting_link", sa.String(length=255), nullable=True),
        sa.Column("timezone", sa.String(length=255), nullable=False),
        sa.Column("max_participants", sa.Integer(), nullable=True),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("current_participants", sa.Integer(), nullable=True),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["categories.[[[[id]]]]"],
            name=op.f("fk_events_category_id_categories"),
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["locations.[[[[id]]]]"],
            name=op.f("fk_events_location_id_locations"),
            use_alter=True,
        ),
        sa.ForeignKeyConstraint(
            ["organizer_id"],
            ["organizers.[[[[id]]]]"],
            name=op.f("fk_events_organizer_id_organizers"),
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint("[[[[id]]]]", name=op.f("pk_events")),
    )
    op.create_index(op.f("ix_events_name"), "events", ["name"], unique=False)
    op.create_table(
        "locations",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=False),
        sa.Column("city", sa.String(length=255), nullable=False),
        sa.Column("country", sa.String(length=255), nullable=False),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("[[[[id]]]]", name=op.f("pk_locations")),
    )
    op.create_index(op.f("ix_locations_city"), "locations", ["city"], unique=False)
    op.create_index(
        op.f("ix_locations_country"), "locations", ["country"], unique=False
    )
    op.create_table(
        "organizers",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.Column("website", sa.String(length=255), nullable=True),
        sa.Column("contact", sa.String(length=255), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=1000), nullable=False),
        sa.Column("logo_url", sa.String(length=255), nullable=True),
        sa.Column("rating", sa.Numeric(precision=3, scale=2), nullable=False),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.[[[[id]]]]"],
            name=op.f("fk_organizers_user_id_users"),
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint("[[[[id]]]]", name=op.f("pk_organizers")),
        sa.UniqueConstraint("logo_url", name=op.f("uq_organizers_logo_url")),
        sa.UniqueConstraint("user_id", name=op.f("uq_organizers_user_id")),
    )
    op.create_table(
        "profiles",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("notifications_enabled", sa.Boolean(), nullable=False),
        sa.Column("first_name", sa.String(length=255), nullable=False),
        sa.Column("last_name", sa.String(length=255), nullable=False),
        sa.Column("avatar_url", sa.String(length=255), nullable=True),
        sa.Column("interested_technologies", sa.String(length=255), nullable=True),
        sa.Column("location", sa.String(length=255), nullable=True),
        sa.Column("birth_date", sa.Date(), nullable=False),
        sa.Column("gender", sa.Enum("MALE", "FEMALE", name="gender"), nullable=True),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.[[[[id]]]]"],
            name=op.f("fk_profiles_user_id_users"),
            ondelete="CASCADE",
            use_alter=True,
        ),
        sa.PrimaryKeyConstraint("[[[[id]]]]", name=op.f("pk_profiles")),
        sa.UniqueConstraint("user_id", name=op.f("uq_profiles_user_id")),
    )
    op.create_table(
        "users",
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("[[[[id]]]]", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("[[[[id]]]]", name=op.f("pk_users")),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("profiles")
    op.drop_table("organizers")
    op.drop_index(op.f("ix_locations_country"), table_name="locations")
    op.drop_index(op.f("ix_locations_city"), table_name="locations")
    op.drop_table("locations")
    op.drop_index(op.f("ix_events_name"), table_name="events")
    op.drop_table("events")
    op.drop_table("event_registrations")
    op.drop_table("event_organizers")
    op.drop_index(op.f("ix_categories_slug"), table_name="categories")
    op.drop_table("categories")
    # ### end Alembic commands ###
